import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.layout.VBox;
import javafx.scene.layout.HBox;
import javafx.scene.layout.BorderPane;
import javafx.geometry.Pos;
import javafx.geometry.Insets;
import javafx.scene.control.Label;
import javafx.scene.control.Button;
import javafx.event.EventHandler;
import javafx.event.ActionEvent;
import javafx.scene.control.MenuBar;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuItem;
import javafx.scene.control.Spinner;
import javafx.scene.control.SpinnerValueFactory;
import javafx.scene.shape.Circle;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.paint.Color;

public class Clock extends Application{
   //Variables
   String time;
   String dn;
   String tz;
   String date;
   
   //Time and Date
   Time t;
   Date d;
   
   //Scenes
   private Scene mainScene,editScene,displayScene;
   
   //MenuBar variables
   private MenuBar menubar;
   
   private Menu editMenu;
   private MenuItem menuEdit;
   
   private Menu displayMenu;
   private MenuItem menuDisplay;
   
   private Menu settings;
   
   //mainScene variables
   private Label lmTime,lmDn,lmTz,lmDate;
   private VBox mVBox;
   private HBox mHBox;
   
   //editScene variables
   private Label leTimezone,leTime,leDate;
   private Button set;
   private HBox timezHbox,timeHbox,dateHbox;
   private VBox eVBox;
   private Spinner<Integer> uHour,uMin,uDay,uYear,uMonth;
   
   //displayScene variables
   
   public static void main(String[] args) throws Exception{
      launch(args);
   }
   
   @Override
   public void start(Stage stage){
      
      //Build menubar
      menubar= new MenuBar();
      
      buildEditMenu(stage);
      buildDisplayMenu(stage);
      
      menubar.getMenus().add(editMenu);
      menubar.getMenus().add(displayMenu);
      
      //Build mainScene
      lmTime= new Label(time);
      lmDn = new Label(dn);
      lmTz = new Label(tz);
      lmDate = new Label(date);
      mHBox = new HBox(lmDn, lmTz);
      mVBox = new VBox(lmTime, mHBox, lmDate);
      BorderPane borderPane = new BorderPane();
      borderPane.setTop(menubar);
      borderPane.setCenter(mVBox);
      mainScene = new Scene(borderPane, 300, 300);
      
      //Build editScene ###NEW###
  
      leTimezone = new Label("Timezone?");
      leTime = new Label("Time?");
      leDate = new Label("Date?");
      set = new Button("Set Clock");
      set.setOnAction(event ->{
         try{
            d = new Date(uDay.getValue(),uMonth.getValue(),uYear.getValue());
            t = new Time(uHour.getValue(),uMin.getValue(),false,d);
            System.out.print("Yes");
            Thread thread = new Thread(new Runnable() {
         
            public void run(){
                startTime(t);
                }
             });
             thread.start();
            stage.setScene(mainScene);
         }catch(NumberFormatException e){
            System.out.print("Yes?");
         }
      });

      uHour = new Spinner(1,12,1);
      uMin = new Spinner(0,59,0);
      uDay = new Spinner(1,31,1);
      uMonth = new Spinner(1,12,1);
      uYear = new Spinner(2000,2050,2000);
      
      uHour.setEditable(false);
      uHour.setMinWidth(10);
      uHour.setMaxWidth(100);
      uHour.setPrefWidth(53);
      
      uMin.setEditable(false);
      uMin.setMinWidth(10);
      uMin.setMaxWidth(100);
      uMin.setPrefWidth(55);
      
      uMonth.setEditable(false);
      uMonth.setMinWidth(10);
      uMonth.setMaxWidth(100);
      uMonth.setPrefWidth(53);
      
      uDay.setEditable(false);
      uDay.setMinWidth(10);
      uDay.setMaxWidth(100);
      uDay.setPrefWidth(55);
      
      uYear.setEditable(false);
      uYear.setMinWidth(10);
      uYear.setMaxWidth(100);
      uYear.setPrefWidth(70);
      
      
      timezHbox = new HBox(leTimezone);
      timeHbox = new HBox(leTime,uHour,uMin);
      dateHbox = new HBox(leDate,uMonth,uDay,uYear);
      
      eVBox = new VBox(25,timezHbox,timeHbox,dateHbox,set);
      
      BorderPane eBorderPane = new BorderPane();
      eBorderPane.setTop(menubar);
      eBorderPane.setCenter(eVBox);
      
      editScene = new Scene(eBorderPane, 220, 200);
      //END editScene
      
      
      stage.setTitle("A Clock");
      stage.setScene(editScene);
      stage.show();
      
      
   }
   
   //Edit Menu Bar
   public void buildEditMenu(Stage stage){
      editMenu= new Menu("Edit");
      
      menuEdit = new MenuItem("Time/Date");
      
      menuEdit.setOnAction(event ->{
               stage.setScene(editScene);
      });
      
      editMenu.getItems().add(menuEdit);
      
   }
   
   //Display Menu Bar
   public void buildDisplayMenu(Stage stage){
      displayMenu = new Menu("Display");
      
      menuDisplay = new MenuItem("Customization");
      
      menuDisplay.setOnAction(event ->{
                  stage.setScene(displayScene);
      });
      
      displayMenu.getItems().add(menuDisplay);
      
   }
   
   public void startTime(Time t){
      int pMin;
      int pHour;
      int i=0;
      
       while(i<1){
          pMin=t.getM();
          pHour=t.getH();
          t.advance();
          if(pMin<t.getM()){
          time=Integer.toString(t.getH()) + ":" + Integer.toString(t.getM());
          lmTime.setText(time);
          }
       }
   }
   
   
}
